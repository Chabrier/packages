SET(CMAKE_INCLUDE_CURRENT_DIR ON)
SET(CMAKE_AUTOMOC ON)

SET(QMAKE_QUERY_LIBPATH qmake -query QT_INSTALL_LIBS)

EXECUTE_PROCESS(COMMAND ${QMAKE_QUERY_LIBPATH} OUTPUT_VARIABLE
  CMAKE_PREFIX_PATH)

FIND_PACKAGE(Qt5 COMPONENTS Widgets Gui Xml)
IF (NOT Qt5_FOUND)
  MESSAGE(FATAL_ERROR "Qt5 is required")
ENDIF (NOT Qt5_FOUND)
IF (NOT Qt5Widgets_FOUND)
  MESSAGE(FATAL_ERROR "Qt5Widgets is required")
ENDIF (NOT Qt5Widgets_FOUND)
if (NOT Qt5Gui_FOUND)
  message(FATAL_ERROR "Qt5Gui is required")
endif (NOT Qt5Gui_FOUND)
if (NOT Qt5Xml_FOUND)
  message(FATAL_ERROR "Qt5Xml is required")
endif (NOT Qt5Xml_FOUND)

INCLUDE_DIRECTORIES(${Qt5Widgets_INCLUDES} ${Qt5Gui_INCLUDES}
  ${Qt5Xml_INCLUDES} ${VLE_INCLUDE_DIRS} ${GVLE_INCLUDE_DIRS}
  ${Boost_INCLUDE_DIRS} ${VLE_BINARY_DIR}/src
  ${VLE_SOURCE_DIR}/src)

LINK_DIRECTORIES(${Boost_LIBRARY_DIRS} ${VLE_LIBRARY_DIRS}
  ${GVLE_LIBRARY_DIRS})

SET(FilePlugin_SOURCES FilePluginGUI.cpp FilePluginGUItab.cpp)

QT5_WRAP_UI(FilePluginGvle_h FilePluginGvle.ui)

ADD_DEFINITIONS(${Qt5Widgets_DEFINITIONS} ${Qt5Gui_DEFINITIONS}
  ${Qt5Xml_DEFINITIONS})

ADD_DEFINITIONS(-DQT_PLUGIN)

ADD_LIBRARY(gvleOutputFile SHARED
  ${FilePlugin_SOURCES}
  ${FilePluginGvle_h} )

TARGET_LINK_LIBRARIES(gvleOutputFile
  ${INTL_LIB} ${GVLE_LIBRARIES} ${VLE_LIBRARIES}
  ${Qt5Widgets_LIBRARIES} ${Qt5Gui_LIBRARIES} ${Qt5Xml_LIBRARIES})

INSTALL(TARGETS gvleOutputFile DESTINATION plugins/gvle/output)
